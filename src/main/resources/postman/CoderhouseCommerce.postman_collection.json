{
	"info": {
		"_postman_id": "aa6b376c-120c-4607-9d50-57591c3e3961",
		"name": "CoderhouseCommerce",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2658780",
		"_collection_link": "https://agecorpad.postman.co/workspace/Adessa~3ea1420a-6d9d-486b-86e3-00ed60ec3487/collection/2658780-aa6b376c-120c-4607-9d50-57591c3e3961?action=share&source=collection_link&creator=2658780"
	},
	"item": [
		{
			"name": "client",
			"item": [
				{
					"name": "Create Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"Matías\");",
									"    pm.expect(jsonData.lastName).to.eql(\"Arévalo\");",
									"    pm.expect(jsonData.dni).to.eql(\"19440113-2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Matías\",\n    \"lastName\": \"Arévalo\",\n    \"dni\": \"19440113-2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/client",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"client"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read all Clients",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/client",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"client"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read single Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"Matías\");",
									"    pm.expect(jsonData.lastName).to.eql(\"Arévalo\");",
									"    pm.expect(jsonData.dni).to.eql(\"19440113-2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/client/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"client",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Matías\",\n    \"lastName\": \"Arévalo Sánchez\",\n    \"dni\": \"19440113-2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/client/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"client",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete single Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/client/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"client",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "order",
			"item": [
				{
					"name": "Create new Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Body Validation\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lines.length).to.eql(2);",
									"    pm.expect(jsonData.lines[0].id).to.eql(1);",
									"    pm.expect(jsonData.lines[1].id).to.eql(2);",
									"    pm.expect(jsonData.client.name).to.eql(\"Alejandro\");",
									"    pm.expect(jsonData.totalOfProducts).to.eql(4);",
									"    pm.expect(jsonData.total).to.eql(1505000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client\": {\n        \"id\": 1\n    },\n    \"lines\": [\n        {\n            \"quantity\": 2,\n            \"productId\": 1\n        },\n        {\n            \"quantity\": 2,\n             \"productId\": 2\n       }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order with invalid client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Error message validation\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errorMessage).to.eql(\"Client not found by id: 3\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client\": {\n        \"id\": 3\n    },\n    \"lines\": [\n        {\n            \"quantity\": 2,\n            \"productId\": 1\n        },\n        {\n            \"quantity\": 2,\n             \"productId\": 2\n       }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order with invalid product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Error message validation\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errorMessage).to.eql(\"Product not found by id: 10\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client\": {\n        \"id\": 1\n    },\n    \"lines\": [\n        {\n            \"quantity\": 2,\n            \"productId\": 10\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order with product out of stock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Error message validation\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errorMessage).to.eql(\"Product [IPhone 11 Pro Max] does not have enough stock.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client\": {\n        \"id\": 1\n    },\n    \"lines\": [\n        {\n            \"quantity\": 200,\n            \"productId\": 1\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read all Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Body Validation\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(1);",
									"    pm.expect(jsonData[0].lines.length).to.eql(2);",
									"    pm.expect(jsonData[0].lines[0].id).to.eql(1);",
									"    pm.expect(jsonData[0].lines[1].id).to.eql(2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read single Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Body Validation\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lines.length).to.eql(2);",
									"    pm.expect(jsonData.lines[0].id).to.eql(1);",
									"    pm.expect(jsonData.lines[1].id).to.eql(2);",
									"    pm.expect(jsonData.totalOfProducts).to.eql(4);",
									"    pm.expect(jsonData.total).to.eql(1505000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/order/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"order",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "Create new product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(3);",
									"    pm.expect(jsonData.sku).to.eql(\"1234\");",
									"    pm.expect(jsonData.description).to.eql(\"Porta celular LinkOn\");",
									"    pm.expect(jsonData.price).to.eql(25000);",
									"    pm.expect(jsonData.stock).to.eql(100);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sku\": \"1234\",\n    \"description\": \"Porta celular LinkOn\",\n    \"price\": 25000,\n    \"stock\": 100\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Product with invalid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"The response data length must be greater than zero\", function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData.filter(d => d.fieldName === \"stock\")[0].errorMessage)",
									"    .to.eql(\"must be greater than or equal to 0\");",
									"    pm.expect(responseData.filter(d => d.fieldName === \"description\")[0].errorMessage)",
									"    .to.eql(\"size must be between 5 and 255\");",
									"    pm.expect(responseData.filter(d => d.fieldName === \"price\")[0].errorMessage)",
									"    .to.eql(\"must be greater than or equal to 1\");",
									"    pm.expect(responseData.filter(d => d.fieldName === \"sku\")[0].errorMessage)",
									"    .to.eql(\"size must be between 4 and 50\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sku\": \"123\",\n    \"description\": \"\",\n    \"price\": 0,\n    \"stock\": -1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sku\": \"2222\",\n    \"description\": \"Cafe 100 gramos\",\n    \"price\": 5000,\n    \"stock\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/product/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"product",
								"2"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		}
	]
}